name: build
on:
  merge_group:
  pull_request:
  push:
env:
  CARGO_TERM_COLOR: always
jobs:
  default:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: msrv
      run: |
        msrv=$(cargo metadata --no-deps --format-version 1 |
          jq --raw-output '.packages[] | select(.name=="trackball") | .rust_version')
        echo "MSRV=$msrv" >> $GITHUB_ENV
    - name: toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ env.MSRV }}
        components: rustfmt, rust-docs, clippy
    - name: test
      run: cargo test
    - name: clippy
      run: |
        cargo clippy --tests
    - name: doc
      run: cargo doc
    - name: fmt
      run: cargo fmt --check
  all-features:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: msrv
      run: |
        msrv=$(cargo metadata --no-deps --format-version 1 |
          jq --raw-output '.packages[] | select(.name=="trackball") | .rust_version')
        echo "MSRV=$msrv" >> $GITHUB_ENV
    - name: toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ env.MSRV }}
        components: rustfmt, rust-docs, clippy
    - name: test
      run: cargo test --all-features
    - name: clippy
      run: |
        cargo clippy --tests --all-features
    - name: doc
      run: cargo doc --all-features
    - name: fmt
      run: cargo fmt --check
  all-features-nightly:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        components: rustfmt, rust-docs, clippy
    - name: test
      run: cargo test --all-features
    - name: clippy
      run: |
        cargo clippy --tests --all-features
    - name: doc
      env:
        RUSTDOCFLAGS: --cfg docsrs
      run: cargo doc --all-features
    - name: fmt
      run: cargo fmt --check
